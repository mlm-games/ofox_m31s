name: Build OrangeFox Recovery

on:
  push:        
    branches:  
      - '**'   # This will match all branches
    paths-ignore:
      - 'README.md'
  pull_request: 
    branches:  
      - '**'   
    paths-ignore:
      - 'README.md'
  workflow_dispatch:
    inputs:
      upload_releases:
        description: 'Upload releases'
        required: true
        default: 'true'
      mark_prerelease:
        description: 'Mark as prerelease'
        required: true
        default: 'false'

jobs:
  build:
    name: Build OFRP by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Clean-up
      uses: rokibhasansagar/slimhub_actions@main

    - name: Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Build OrangeFox Recovery
      uses: mlm-games/OrangeFox-Builder-Action@main 
      id: build
      with:
        MANIFEST_BRANCH: '12.1'
        DEVICE_TREE: 'https://github.com/mlm-games/ofox_m31s'
        DEVICE_TREE_BRANCH: 'android-12.1'
        DEVICE_NAME: 'm31s'
        DEVICE_PATH: 'device/samsung/m31s'
        BUILD_TARGET: 'recovery'

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      if: github.event_name == 'workflow_dispatch' && inputs.upload_releases == 'true'
      with:
        files: |
          ${{ env.OUTPUT_DIR }}/OrangeFox*.img
          ${{ env.OUTPUT_DIR }}/OrangeFox*.tar
          ${{ env.OUTPUT_DIR }}/OrangeFox*.zip
          ${{ env.OUTPUT_DIR }}/ramdisk-recovery.*
        name: Unofficial OrangeFox for ${{ env.DEVICE_NAME }} // ${{ env.BUILD_DATE }}
        tag_name: ${{ github.run_id }}
        body: |
          Build: ${{ env.MANIFEST_BRANCH }}
          Device: [Device Tree/Branch](${{ env.DEVICE_TREE }}/tree/${{ env.DEVICE_TREE_BRANCH }})
          Commit: Most recent [commit](${{ env.DEVICE_TREE }}/commit/${{ env.COMMIT_ID }}) during building.
          MD5 (img): ${{ env.MD5_IMG }}
          MD5 (zip): ${{ env.MD5_ZIP }}
        prerelease: ${{ inputs.mark_prerelease }}
